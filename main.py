# todo –µ—Å–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –∏–º–ø–æ—Ä—Ç—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è - —É–±–∏—Ä–∞–π –∏—Ö, —Å–æ–±–ª—é–¥–∞–π —á–∏—Å—Ç–æ—Ç—É –∫–æ–¥–∞. —Ç—É—Ç —Å–∞–º–∞ —É–¥–∞–ª–∏–ª–∞
import logging
from datetime import datetime, timedelta
from telegram import Update, ChatMember
from storage.repository import SubscriberRepository, InviteRepository
from telegram.ext import Updater, CallbackContext, ChatMemberHandler, MessageHandler, Filters, ChatJoinRequestHandler
from storage.postgres_storage import get_connection
from config import Config
from telethon_client import telethon_tracker

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.DEBUG
)
logger = logging.getLogger(__name__)

# –û–¢–õ–ê–î–ö–ê: –í—ã–≤–æ–¥–∏–º –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
logger.info(f"üîß –ó–∞–≥—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–∏–≥: ADMIN_IDS = {Config.ADMIN_IDS}")
logger.info(f"üîß TELEGRAM_TOKEN = {Config.TELEGRAM_TOKEN[:10]}...")
logger.info(f"üîß CHANNEL_ID = {Config.CHANNEL_ID}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
subscriber_repo = SubscriberRepository()
invite_repo = InviteRepository()

# –û–°–ù–û–í–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò
def track_chat_member(update: Update, context: CallbackContext):
    """–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è –∏–ª–∏ –ø–æ–∫–∏–¥–∞—é—Ç –∫–∞–Ω–∞–ª"""
    try:
        chat_member = update.chat_member
        new_status = chat_member.new_chat_member.status
        old_status = chat_member.old_chat_member.status
        user = chat_member.new_chat_member.user
        chat_id = chat_member.chat.id

        logger.info(f"üîÑ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {old_status} -> {new_status}")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CHANNEL_ID –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if Config.CHANNEL_ID is None:
            Config.CHANNEL_ID = chat_id
            logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ID –∫–∞–Ω–∞–ª–∞: {chat_id}")

        # –ö–û–ì–î–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –°–¢–ê–ù–û–í–ò–¢–°–Ø –£–ß–ê–°–¢–ù–ò–ö–û–ú
        if (old_status in [ChatMember.LEFT, ChatMember.KICKED, ChatMember.RESTRICTED, ChatMember.BANNED] and
                new_status == ChatMember.MEMBER):

            logger.info(f"üéâ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user.id} –í–°–¢–£–ü–ò–õ –í –ö–ê–ù–ê–õ!")

            user_data = {
                'user_id': user.id,
                'username': user.username,
                'first_name': user.first_name,
                'last_name': user.last_name,
                'channel_id': chat_id,
                'added_by_admin': False,
                'manually_added': False
            }

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–æ–±–∞–≤–ª—è—é—â–∏–π –∞–¥–º–∏–Ω–æ–º
            try:
                admins = context.bot.get_chat_administrators(chat_id)
                admin_ids = [admin.user.id for admin in admins]

                # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–¥–µ–ª–∞–ª –∞–¥–º–∏–Ω, –æ—Ç–º–µ—á–∞–µ–º —ç—Ç–æ
                if update.chat_member.from_user.id in admin_ids:
                    user_data['added_by_admin'] = True
                    user_data['manually_added'] = True
                    logger.info(f"üë®‚Äçüíº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –¥–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º")
                else:
                    logger.info(f"üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤—Å—Ç—É–ø–∏–ª –ø–æ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–µ")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–æ–≤: {e}")

            # –°–û–•–†–ê–ù–Ø–ï–ú –í –ë–ê–ó–£
            if subscriber_repo.add_or_renew_subscriber(user_data, "chat_member"):
                logger.info(f"‚úÖ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user.id} –£–°–ü–ï–®–ù–û –î–û–ë–ê–í–õ–ï–ù –í –ë–ê–ó–£!")

                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –≤ –õ–°
                admin_message = (
                    f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥—Ä—É–ø–ø–µ:\n"
                    f"üÜî ID: {user.id}\n"
                    f"üìõ –ò–º—è: {user.first_name} {user.last_name or ''}\n"
                    f"üîó @{user.username or '–Ω–µ—Ç'}\n"
                    f"üë®‚Äçüíº –î–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º: {'–î–∞' if user_data['added_by_admin'] else '–ù–µ—Ç'}\n"
                    f"‚è∞ –û—Ç—Å—á–µ—Ç 32 –¥–Ω–µ–π –Ω–∞—á–∞—Ç!"
                )

                for admin_id in Config.ADMIN_IDS:
                    try:
                        context.bot.send_message(chat_id=admin_id, text=admin_message)
                    except Exception as e:
                        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ {admin_id}: {e}")
            else:
                logger.error(f"‚ùå –ù–ï –£–î–ê–õ–û–°–¨ –î–û–ë–ê–í–ò–¢–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {user.id} –í –ë–ê–ó–£!")

        # –ö–û–ì–î–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ü–û–ö–ò–î–ê–ï–¢/–£–î–ê–õ–Ø–ï–¢–°–Ø
        elif (old_status == ChatMember.MEMBER and
              new_status in [ChatMember.LEFT, ChatMember.KICKED]):
            logger.info(f"‚ùå –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ {user.id} –ü–û–ö–ò–ù–£–õ –ö–ê–ù–ê–õ")
            if subscriber_repo.mark_as_removed(user.id):
                logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π")
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–º–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")

# –î–û–ë–ê–í–¨ —ç—Ç—É –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π –ø–æ –∏–Ω–≤–∞–π—Ç–∞–º:
def handle_chat_join_request(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞–º"""
    try:
        if not update.chat_join_request:
            return

        user = update.chat_join_request.from_user
        chat_id = update.chat_join_request.chat.id
        invite_link = update.chat_join_request.invite_link

        logger.info(f"üîó –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤ —á–∞—Ç {chat_id}")

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–ø—Ä–æ—Å
        try:
            update.chat_join_request.approve()
            logger.info(f"‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω –¥–ª—è {user.id}")
        except Exception as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å: {e}")
            return

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = {
            'user_id': user.id,
            'username': user.username,
            'first_name': user.first_name,
            'last_name': user.last_name,
            'channel_id': chat_id,
            'added_by_admin': False,
            'manually_added': False
        }

        if subscriber_repo.add_or_renew_subscriber(user_data, "chat_member"):
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ –∏–Ω–≤–∞–π—Ç")

            # –ï—Å–ª–∏ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞, –æ—Ç–º–µ—á–∞–µ–º —ç—Ç–æ
            if invite_link:
                invite_repo.mark_invite_used(invite_link.invite_link, user.id)
                logger.info(f"üîó –ò–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.id}")

            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º
            admin_message = (
                f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ –∏–Ω–≤–∞–π—Ç—É:\n"
                f"üÜî ID: {user.id}\n"
                f"üìõ –ò–º—è: {user.first_name} {user.last_name or ''}\n"
                f"üîó @{user.username or '–Ω–µ—Ç'}\n"
                f"‚è∞ –û—Ç—Å—á–µ—Ç 32 –¥–Ω–µ–π –Ω–∞—á–∞—Ç!"
            )

            for admin_id in Config.ADMIN_IDS:
                try:
                    context.bot.send_message(chat_id=admin_id, text=admin_message)
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∞ {admin_id}: {e}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è: {e}")

# –§–£–ù–ö–¶–ò–ò –ò–ù–í–ê–ô–¢-–°–ò–°–¢–ï–ú–´
def generate_simple_invite(context: CallbackContext, chat_id: int, admin_id: int):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É (–¥–µ–π—Å—Ç–≤—É–µ—Ç 24 —á–∞—Å–∞)
        invite_link = context.bot.create_chat_invite_link(
            chat_id=chat_id,
            name=f"invite_{int(datetime.now().timestamp())}",
            expire_date=datetime.now() + timedelta(hours=24),
            member_limit=1
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –∫–∞–∫ "–æ–±—â—É—é" —Å—Å—ã–ª–∫—É
        invite_repo.save_general_invite(invite_link.invite_link, admin_id)

        logger.info(f"üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –æ–±—â–∞—è –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω–æ–º {admin_id}")

        return (f"‚úÖ –ò–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n"
                f"üîó {invite_link.invite_link}\n\n"
                f"üìã –û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –æ–ø–ª–∞—Ç–∏–≤—à–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é\n"
                f"‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç: 24 —á–∞—Å–∞\n"
                f"üë• –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: 1 —Ä–∞–∑\n\n"
                f"üí° –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞!")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–Ω–≤–∞–π—Ç–∞: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏: {e}"

def generate_invite_link(user_id: int, context: CallbackContext, chat_id: int):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É —Å –∏–º–µ–Ω–µ–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        invite_link = context.bot.create_chat_invite_link(
            chat_id=chat_id,
            name=f"personal_invite_{user_id}_{int(datetime.now().timestamp())}",
            expire_date=datetime.now() + timedelta(hours=24),
            member_limit=1
        )

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
        success = invite_repo.save_invite_link(user_id, invite_link.invite_link)

        if success:
            logger.info(f"üîó –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞ –¥–ª—è {user_id}: {invite_link.invite_link}")
            return (f"‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:\n\n"
                    f"üîó {invite_link.invite_link}\n\n"
                    f"‚è∞ –î–µ–π—Å—Ç–≤—É–µ—Ç: 24 —á–∞—Å–∞\n"
                    f"üë• –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: 1 —Ä–∞–∑\n"
                    f"üìù –¢–∏–ø: –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è")
        else:
            return f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}"

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω–≤–∞–π—Ç–∞ –¥–ª—è {user_id}: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏: {e}"

def get_active_invites_list():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–æ–∫"""
    try:
        invites = invite_repo.get_active_invites()

        if not invites:
            return "üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–æ–∫"

        result = "üîó –ê–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫–∏:\n\n"
        for invite in invites:
            user_id, link, created_at, used, is_general = invite
            hours_left = 24 - (datetime.now() - created_at).total_seconds() / 3600

            if is_general:
                user_info = "üë§ –û–±—â–∞—è —Å—Å—ã–ª–∫–∞"
            else:
                user_info = f"üë§ –î–ª—è: {user_id}"

            status = "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω" if used else "‚è≥ –û–∂–∏–¥–∞–µ—Ç"

            result += f"{user_info}\n"
            result += f"üîó {link[:30]}...\n"
            result += f"üìä {status} | ‚è∞ {hours_left:.1f}—á –æ—Å—Ç–∞–ª–æ—Å—å\n\n"

        return result

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def get_used_invites_list():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤"""
    try:
        invites = invite_repo.get_used_invites()

        if not invites:
            return "üì≠ –ù–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–æ–∫"

        result = "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω–≤–∞–π—Ç—ã:\n\n"
        for invite in invites:
            link, used_by, used_at, is_general = invite
            result += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {used_by}\n"
            result += f"üîó {link[:25]}...\n"
            result += f"üïí –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: {used_at.strftime('%d.%m %H:%M')}\n\n"

        return result

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def force_add_user(user_id: int, chat_id: int, context: CallbackContext):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        try:
            chat_member = context.bot.get_chat_member(chat_id, user_id)
            user = chat_member.user
        except:
            user = type('User', (), {'id': user_id, 'username': 'unknown', 'first_name': 'Unknown', 'last_name': ''})()

        user_data = {
            'user_id': user.id,
            'username': user.username,
            'first_name': user.first_name,
            'last_name': user.last_name,
            'channel_id': chat_id,
            'added_by_admin': True,
            'manually_added': True
        }

        if subscriber_repo.add_or_renew_subscriber(user_data, "chat_member"):
            return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n‚è∞ –û—Ç—Å—á–µ—Ç 32 –¥–Ω–µ–π –Ω–∞—á–∞—Ç"
        else:
            return f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}"

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def sync_current_members(update: Update, context: CallbackContext):
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ—Ö —Ç–µ–∫—É—â–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã"""
    try:
        chat_id = update.effective_chat.id
        added_count = 0

        admins = context.bot.get_chat_administrators(chat_id)
        for admin in admins:
            if not admin.user.is_bot:
                user_data = {
                    'user_id': admin.user.id,
                    'username': admin.user.username,
                    'first_name': admin.user.first_name,
                    'last_name': admin.user.last_name,
                    'channel_id': chat_id,
                    'added_by_admin': True,
                    'manually_added': True
                }
                if subscriber_repo.add_or_renew_subscriber(user_data, "chat_member"):
                    added_count += 1

        try:
            for message in context.bot.get_chat_history(chat_id, limit=100):
                if message.from_user and not message.from_user.is_bot:
                    user_data = {
                        'user_id': message.from_user.id,
                        'username': message.from_user.username,
                        'first_name': message.from_user.first_name,
                        'last_name': message.from_user.last_name,
                        'channel_id': chat_id,
                        'added_by_admin': True,
                        'manually_added': True
                    }
                    if subscriber_repo.add_or_renew_subscriber(user_data, "chat_member"):
                        added_count += 1
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é: {e}")

        return f"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {added_count}\n‚è∞ –û—Ç—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞—á–∞—Ç –¥–ª—è –≤—Å–µ—Ö"

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}"

def get_user_info(user_id: int):
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    try:
        user_info = subscriber_repo.get_user_info(user_id)

        if not user_info:
            return f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ"

        username, first_name, last_name, join_date, removed, removal_count = user_info

        status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if not removed else "‚ùå –£–¥–∞–ª–µ–Ω"
        days_in_group = (datetime.now() - join_date).days if join_date else 0

        return (f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n"
                f"üÜî ID: {user_id}\n"
                f"üìõ –ò–º—è: {first_name} {last_name}\n"
                f"üîó Username: @{username}\n"
                f"üìä –°—Ç–∞—Ç—É—Å: {status}\n"
                f"üî¢ –£–¥–∞–ª–µ–Ω–∏–π: {removal_count}\n"
                f"üìÖ –í –≥—Ä—É–ø–ø–µ: {days_in_group} –¥–Ω–µ–π\n"
                f"‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {32 - days_in_group}")

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def get_active_users_list():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        users = subscriber_repo.get_active_users()

        if not users:
            return "üìä –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

        result = "üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n"
        for user in users[:20]:
            user_id, username, first_name, last_name, join_date = user
            days_in_group = (datetime.now() - join_date).days
            result += f"üÜî {user_id} - {first_name} {last_name}\n"
            result += f"   üìÖ –í –≥—Ä—É–ø–ø–µ: {days_in_group} –¥–Ω–µ–π\n"
            result += f"   ‚è∞ –û—Å—Ç–∞–ª–æ—Å—å: {32 - days_in_group} –¥–Ω–µ–π\n\n"

        return result

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞: {e}"

def handle_all_messages(update: Update, context: CallbackContext):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥ (–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –≤ –õ–°)"""

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
    if not update.message or not update.message.text:
        return

    message_text = update.message.text
    user_id = update.effective_user.id
    username = update.effective_user.username or "–±–µ–∑ username"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥—ã
    if not message_text.startswith('/'):
        return

    # –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    parts = message_text.split()
    command_full = parts[0][1:]  # –£–±–∏—Ä–∞–µ–º / –≤ –Ω–∞—á–∞–ª–µ
    command = command_full.split('@')[0]  # –£–±–∏—Ä–∞–µ–º @username –µ—Å–ª–∏ –µ—Å—Ç—å

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    args = parts[1:] if len(parts) > 1 else []

    # –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–¢–õ–ê–î–ö–ê –ö–û–ú–ê–ù–î–´
    logger.info(f"üîç –ö–æ–º–∞–Ω–¥–∞ '{command}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (@{username})")
    logger.info(f"üîç –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã: {args}")
    logger.info(f"üîç –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç: '{message_text}'")
    logger.info(f"üîç ADMIN_IDS: {Config.ADMIN_IDS}")
    logger.info(f"üîç user_id in ADMIN_IDS: {user_id in Config.ADMIN_IDS}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥
    if user_id not in Config.ADMIN_IDS:
        # –î–ª—è –∫–æ–º–∞–Ω–¥—ã /join —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –≤—Å–µ–º
        if command != 'join':
            logger.warning(f"üö´ –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù: {user_id} –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤")
            try:
                update.message.delete()
                logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ-–∞–¥–º–∏–Ω–∞ {user_id} —É–¥–∞–ª–µ–Ω–æ")
            except Exception as e:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")
            return

    # –î–ª—è –∞–¥–º–∏–Ω–æ–≤ - –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–æ —É–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if user_id in Config.ADMIN_IDS:
        try:
            update.message.delete()
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ {user_id} —É–¥–∞–ª–µ–Ω–æ –∏–∑ —á–∞—Ç–∞")
        except Exception as e:
            logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞: {e}")

    # –õ–æ–≥–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
    try:
        response = ""

        if command == 'start':
            count = subscriber_repo.get_subscriber_count()
            response = f"ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω\nüìä –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {count}"

        elif command == 'stats':
            count = subscriber_repo.get_subscriber_count()
            response = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n‚Ä¢ –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {count}\n‚Ä¢ ID –∫–∞–Ω–∞–ª–∞: {Config.CHANNEL_ID or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}"

        elif command == 'get_id':
            chat_id = update.effective_chat.id
            response = f"üÜî ID —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã: `{chat_id}`"

        # üé´ –°–ö–†–´–¢–´–ï –ö–û–ú–ê–ù–î–´ –ò–ù–í–ê–ô–¢-–°–ò–°–¢–ï–ú–´ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
        elif command == 'invite':
            if user_id in Config.ADMIN_IDS:
                response = generate_simple_invite(context, update.effective_chat.id, user_id)
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"


        elif command == 'sync_telethon':
            if user_id in Config.ADMIN_IDS:
                context.bot.send_message(
                    chat_id=user_id,
                    text="üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Telethon..."
                )
                result = telethon_tracker.force_sync_members_sync()
                context.bot.send_message(
                    chat_id=user_id,
                    text=result
                )
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
        elif command == 'telethon_stats':
            if user_id in Config.ADMIN_IDS:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ Telethon
                    member_count = telethon_tracker.get_member_count_sync()
                    db_count = subscriber_repo.get_subscriber_count()
                    response = (
                        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Telethon:\n"
                        f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ: {member_count}\n"
                        f"üíæ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_count}\n"
                        f"üîó Telethon –ø–æ–¥–∫–ª—é—á–µ–Ω: {telethon_tracker.is_connected()}\n"
                        f"üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω: {telethon_tracker.is_monitoring}\n"
                        f"üìù –†–∞–∑–Ω–∏—Ü–∞: {member_count - db_count}"
                    )
                except Exception as e:
                    response = f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}"
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"
        elif command == 'active_invites':
            if user_id in Config.ADMIN_IDS:
                response = get_active_invites_list()
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'check_user':
            if user_id in Config.ADMIN_IDS:
                if args and len(args) > 0:
                    try:
                        user_id_to_check = int(args[0])
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ –±–∞–∑–µ
                        user_info = subscriber_repo.get_user_info(user_id_to_check)
                        if user_info:
                            response = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id_to_check} –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ"
                        else:
                            response = f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id_to_check} –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ"

                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Telegram API
                        try:
                            chat_member = context.bot.get_chat_member(update.effective_chat.id, user_id_to_check)
                            response += f"\nüì± –í –∫–∞–Ω–∞–ª–µ: –î–ê (—Å—Ç–∞—Ç—É—Å: {chat_member.status})"
                        except:
                            response += f"\nüì± –í –∫–∞–Ω–∞–ª–µ: –ù–ï–¢"
                    except ValueError:
                        response = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID"
                else:
                    response = "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /check_user 123456"
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'db_status':
            if user_id in Config.ADMIN_IDS:
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î
                    subs_count = subscriber_repo.get_subscriber_count()

                    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
                    active_users = subscriber_repo.get_active_users()

                    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–∞–π—Ç—ã
                    active_invites = invite_repo.get_active_invites()

                    response = f"üìä –°–¢–ê–¢–£–° –ë–ê–ó–´ –î–ê–ù–ù–´–•:\n"
                    response += f"üë• –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subs_count}\n"
                    response += f"üîó –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤: {len(active_invites)}\n\n"

                    if active_users:
                        response += f"üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏:\n"
                        for user in active_users[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
                            user_id_sub, username, first_name, last_name, join_date = user
                            days_in_group = (datetime.now() - join_date).days
                            response += f"üÜî {user_id_sub} - {first_name} - {days_in_group}–¥\n"
                    else:
                        response += "üìã –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n"

                    if active_invites:
                        response += f"\nüîó –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–∞–π—Ç—ã:\n"
                        for invite in active_invites[:3]:
                            user_id_inv, link, created_at, used, is_general = invite
                            hours_left = 24 - (datetime.now() - created_at).total_seconds() / 3600
                            type_str = "–û–±—â–∞—è" if is_general else "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è"
                            response += f"‚Ä¢ {type_str} ({user_id_inv}) - {hours_left:.1f}—á\n"

                except Exception as e:
                    response = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}"
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ db_status: {e}")
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'force_add':
            if user_id in Config.ADMIN_IDS:
                if args and len(args) > 0:
                    try:
                        user_id_to_add = int(args[0])
                        response = force_add_user(user_id_to_add, update.effective_chat.id, context)
                    except ValueError:
                        response = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã: /force_add 123456"
                else:
                    response = "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /force_add 123456"
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'sync_current':
            if user_id in Config.ADMIN_IDS:
                response = sync_current_members(update, context)
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'user_info':
            if user_id in Config.ADMIN_IDS:
                if args and len(args) > 0:
                    try:
                        user_id_info = int(args[0])
                        response = get_user_info(user_id_info)
                    except ValueError:
                        response = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã: /user_info 123456"
                else:
                    response = "‚ùå –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /user_info 123456"
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'active_users':
            if user_id in Config.ADMIN_IDS:
                response = get_active_users_list()
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        elif command == 'used_invites':
            if user_id in Config.ADMIN_IDS:
                response = get_used_invites_list()
            else:
                response = "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

        # üåê –û–¢–ö–†–´–¢–ê–Ø –ö–û–ú–ê–ù–î–ê (–¥–ª—è –≤—Å–µ—Ö)
        elif command == 'join':
            response = (
                "ü§î –ö–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø–ª–∞—Ç–Ω–æ–π –≥—Ä—É–ø–ø–µ?\n\n"
                "1. üí∞ –û–ø–ª–∞—Ç–∏—Ç–µ –¥–æ—Å—Ç—É–ø\n"
                "2. üìû –°–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É –æ–± –æ–ø–ª–∞—Ç–µ\n"
                "3. üîó –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∏–Ω–≤–∞–π—Ç-—Å—Å—ã–ª–∫—É\n"
                "4. üéâ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è\n"
                "5. ‚è∞ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º 32 –¥–Ω—è!\n\n"
                "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –∞–¥–º–∏–Ω–∞: @YourAdminUsername"
            )

        else:
            response = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"

        logger.info(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ '{command}' –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –æ—Ç–≤–µ—Ç: {response[:50]}...")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –õ–ò–ß–ù–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è
        context.bot.send_message(
            chat_id=user_id,
            text=response
        )
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ {command} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        context.bot.send_message(
            chat_id=user_id,
            text=f"‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ {command}: {e}"
        )

# def remove_old_subscribers(context: CallbackContext):
#     """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 32 –¥–Ω—è"""
#     try:
#         subscribers_to_remove = subscriber_repo.get_subscribers_to_remove()
#         logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {len(subscribers_to_remove)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
#
#         if not subscribers_to_remove:
#             return
#
#         for subscriber in subscribers_to_remove:
#             user_id, username, first_name, last_name = subscriber
#
#             if user_id in Config.ADMIN_IDS:
#                 logger.info(f"üëë –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∞: {user_id}")
#                 continue
#
#             try:
#                 logger.info(f"üîÑ –ü—ã—Ç–∞—é—Å—å —É–¥–∞–ª–∏—Ç—å {user_id} –∏–∑ —á–∞—Ç–∞ {Config.CHANNEL_ID}")
#
#                 context.bot.ban_chat_member(
#                     chat_id=Config.CHANNEL_ID,
#                     user_id=user_id
#                 )
#
#                 subscriber_repo.mark_as_removed(user_id)
#                 logger.info(f"‚úÖ –£–¥–∞–ª–µ–Ω –ø–æ–¥–ø–∏—Å—á–∏–∫: {user_id}")
#
#             except Exception as e:
#                 logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {user_id}: {e}")
#                 subscriber_repo.mark_as_removed(user_id)
#
#     except Exception as e:
#         logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∑–∞–¥–∞—á–µ —É–¥–∞–ª–µ–Ω–∏—è: {e}")

def remove_old_subscribers(context: CallbackContext):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 32 –¥–Ω—è —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏"""
    try:
        subscribers_to_remove = subscriber_repo.get_subscribers_to_remove()
        logger.info(f"üîç –ù–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {len(subscribers_to_remove)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")

        if not subscribers_to_remove:
            return

        for subscriber in subscribers_to_remove:
            user_id, username, first_name, last_name = subscriber

            if user_id in Config.ADMIN_IDS:
                logger.info(f"üëë –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–∞: {user_id}")
                continue

            try:
                logger.info(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

                # 1. –ë–ê–ù –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É (—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞)
                logger.info(f"‚è≥ –í—ã–ø–æ–ª–Ω—è–µ–º –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É...")
                from datetime import datetime, timedelta
                context.bot.ban_chat_member(
                    chat_id=Config.CHANNEL_ID,
                    user_id=user_id,
                    until_date=datetime.now() + timedelta(seconds=1)
                )
                logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–∞–Ω–µ–Ω (—É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞)")

                # 2. –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ê (—É–±–∏—Ä–∞–µ–º –∏–∑ –ß–°)
                logger.info(f"‚è≥ –í—ã–ø–æ–ª–Ω—è–µ–º –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}...")
                try:
                    context.bot.unban_chat_member(
                        chat_id=Config.CHANNEL_ID,
                        user_id=user_id,
                        only_if_banned=True
                    )
                    logger.info(f"üéâ –£–°–ü–ï–•: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ê–ù –∏ —É–±—Ä–∞–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞!")
                except Exception as unban_error:
                    logger.error(f"‚ùå –û–®–ò–ë–ö–ê –†–ê–ó–ë–õ–û–ö–ò–†–û–í–ö–ò {user_id}: {unban_error}")
                    # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏

                # 3. –û—Ç–º–µ—á–∞–µ–º –≤ –ë–î
                subscriber_repo.mark_as_removed(user_id)
                logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π –≤ –ë–î")

                logger.info(f"üéØ –ó–ê–í–ï–†–®–ï–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

            except Exception as e:
                logger.error(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –¥–ª—è {user_id}: {e}")
                # –í—Å–µ —Ä–∞–≤–Ω–æ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ, –¥–∞–∂–µ –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞
                try:
                    subscriber_repo.mark_as_removed(user_id)
                    logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ —É–¥–∞–ª–µ–Ω–Ω—ã–π –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É")
                except Exception as db_error:
                    logger.error(f"üóÑÔ∏è –û—à–∏–±–∫–∞ –ë–î –¥–ª—è {user_id}: {db_error}")

    except Exception as e:
        logger.error(f"üí• –û–ë–©–ê–Ø –û–®–ò–ë–ö–ê –≤ –∑–∞–¥–∞—á–µ —É–¥–∞–ª–µ–Ω–∏—è: {e}")


def debug_invites(update: Update, context: CallbackContext):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏–Ω–≤–∞–π—Ç-—Å–∏—Å—Ç–µ–º—ã"""
    user_id = update.effective_user.id
    if user_id not in Config.ADMIN_IDS:
        return "‚õî –ù–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞"

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–∞–π—Ç—ã
        active_invites = invite_repo.get_active_invites()

        result = f"üîß –î–ï–ë–ê–ì –ò–ù–í–ê–ô–¢-–°–ò–°–¢–ï–ú–´:\n"
        result += f"üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω–≤–∞–π—Ç–æ–≤: {len(active_invites)}\n\n"

        for i, invite in enumerate(active_invites[:5], 1):
            user_id_inv, link, created_at, used, is_general = invite
            result += f"{i}. User: {user_id_inv} | General: {is_general}\n"
            result += f"   Link: {link[:30]}...\n"
            result += f"   Used: {used} | Created: {created_at.strftime('%H:%M')}\n\n"

        return result

    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}"

def debug_invite_flow(update: Update, context: CallbackContext):
    """Test function to debug invite flow"""
    test_link = "your_test_invite_link_here"

    # Test saving
    invite_repo.save_general_invite(test_link, update.effective_user.id)

    # Test retrieval
    active_invites = invite_repo.get_active_invites()
    logger.info(f"Active invites in DB: {len(active_invites)}")

    # Test marking as used
    invite_repo.mark_invite_used(test_link, update.effective_user.id)

    update.message.reply_text(f"Debug completed. Check logs for details.")

def debug_invites_detailed(update: Update, context: CallbackContext):
    """Get detailed debug information about invites"""
    user_id = update.effective_user.id
    if user_id not in Config.ADMIN_IDS:
        return

    try:
        conn = get_connection()
        cursor = conn.cursor()

        # Check general invites
        cursor.execute('''
            SELECT COUNT(*) as total, 
                   SUM(CASE WHEN used = TRUE THEN 1 ELSE 0 END) as used_count
            FROM invite_links 
            WHERE is_general = TRUE
        ''')
        general_stats = cursor.fetchone()

        # Check personal invites
        cursor.execute('''
            SELECT COUNT(*) as total,
                   SUM(CASE WHEN used = TRUE THEN 1 ELSE 0 END) as used_count
            FROM invite_links 
            WHERE is_general = FALSE
        ''')
        personal_stats = cursor.fetchone()

        # Get recent used invites
        cursor.execute('''
            SELECT invite_link, used_by, used_at, is_general
            FROM invite_links 
            WHERE used = TRUE 
            ORDER BY used_at DESC 
            LIMIT 5
        ''')
        recent_used = cursor.fetchall()

        conn.close()

        response = (
            f"üìä –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ò–ù–í–ê–ô–¢–û–í:\n\n"
            f"üë• –û–ë–©–ò–ï –∏–Ω–≤–∞–π—Ç—ã:\n"
            f"   ‚Ä¢ –í—Å–µ–≥–æ: {general_stats[0]}\n"
            f"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {general_stats[1]}\n\n"
            f"üë§ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –∏–Ω–≤–∞–π—Ç—ã:\n"
            f"   ‚Ä¢ –í—Å–µ–≥–æ: {personal_stats[0]}\n"
            f"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {personal_stats[1]}\n\n"
            f"üïí –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ:\n"
        )

        for invite in recent_used:
            link, used_by, used_at, is_general = invite
            response += f"   ‚Ä¢ {link[:15]}... - user:{used_by} - general:{is_general}\n"

        context.bot.send_message(chat_id=user_id, text=response)

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏: {e}")


def setup_application():
    # üéØ –û–°–ù–û–í–ù–û–ô –ó–ê–ü–£–°–ö TELETHON –¢–†–ï–ö–ï–†–ê
    logger.info("üîÑ –ó–∞–ø—É—Å–∫ Telethon —Ç—Ä–µ–∫–µ—Ä–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞...")
    telethon_success = telethon_tracker.start_sync()

    if telethon_success:
        logger.info("‚úÖ Telethon —Ç—Ä–µ–∫–µ—Ä –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–Ω–∏—Ç–æ—Ä —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    else:
        logger.error("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Telethon —Ç—Ä–µ–∫–µ—Ä!")
        # –ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º

    # üéØ Bot API –¥–ª—è –∫–æ–º–∞–Ω–¥ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    updater = Updater(Config.TELEGRAM_TOKEN, use_context=True)
    application = updater.dispatcher

    # üìù –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Bot API (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫ Telethon)
    application.add_handler(ChatMemberHandler(track_chat_member))  # –î–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
    application.add_handler(MessageHandler(Filters.all, handle_all_messages))
    application.add_handler(ChatJoinRequestHandler(handle_chat_join_request))

    # ‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞–Ω–∏–π
    job_queue = updater.job_queue
    if job_queue:
        job_queue.run_repeating(remove_old_subscribers, interval=300, first=10)

        # üîÑ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø TELETHON (–∫–∞–∂–¥—ã–µ 2 —á–∞—Å–∞)
        job_queue.run_repeating(sync_telethon_periodically, interval=7200, first=30)

        logger.info("‚úÖ JobQueue –∑–∞–ø—É—â–µ–Ω —Å Telethon —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π")

    return updater


# def sync_telethon_periodically(context: CallbackContext):
#     """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telethon"""
#     try:
#         logger.info("üîÑ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Telethon...")
#         result = telethon_tracker.force_sync_members_sync()
#         logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {result}")
#     except Exception as e:
#         logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")


def sync_telethon_periodically(context: CallbackContext):
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telethon"""
    try:
        logger.info("üîÑ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Telethon...")

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        result = telethon_tracker.force_sync_members_sync_simple()
        logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {result}")

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")


# todo –¥—É–±–ª–∏–∫–∞—Ç, —É–∂–µ –µ—Å—Ç—å –≤ postgres_storage.py
# def get_connection():
#     """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫."""
#     try:
#         conn = psycopg2.connect(Config.DATABASE_URL)
#         conn.autocommit = False
#         return conn
#     except Exception as e:
#         logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
#         raise

# def main():
#     """–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –¥–ª—è Windows."""
#     try:
#         # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è Windows
#         updater = setup_application()
#         logger.info("üîÑ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
#         updater.start_polling()
#         updater.idle()
#     except KeyboardInterrupt:
#         print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
#     except Exception as e:
#         logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
#         raise

